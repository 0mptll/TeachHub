@model TeachHub.Models.Teacher

@{
    ViewData["Title"] = "Edit Teacher Profile";
}

<h1>Edit Profile</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditTeacher" enctype="multipart/form-data">
            <!-- Added enctype for file uploads -->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="TeacherId" />

            <div class="form-group">
                <label asp-for="Bio" class="control-label"></label>
                <input asp-for="Bio" class="form-control" />
                <span asp-validation-for="Bio" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="ProfilePicture" class="control-label">Profile Picture</label>
                @if (!string.IsNullOrEmpty(Model.ProfilePicture))
                {
                    <div>
                        <img src="@Model.ProfilePicture" alt="Current Profile Picture" style="max-width: 100%; height: auto;" />
                    </div>
                }
                <input type="file" name="ProfilePicture" class="form-control" accept="image/*" />
                <span asp-validation-for="ProfilePicture" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
